<!--
	Author: Ray Tam
    Currently this Visualforce page displays only pie charts.

    This Visualforce page is responsible for gathering url paramters to build a JSON object that 
    specifies to the database what data to retrieve. The table returned from the database call is
    used by google charts to build a chart of the specific type. This chart is returned as an SVG.
    
    Mark:  Provide URL with graph related parameters.
    Ray:   Convert URL to JSON/GRobj.
    Brian: Take in JSON/GRobj and return a Google Datatable.
    Ray:   Modify Datatable into a valid table for google charts.
    Draw chart as an SVG
    
    --Developer Notes
    
    VFpage URL: https://c.na9.visual.force.com/apex/graphView?id=a04E0000002SZZHIA4&attrib_name=button&graph_type=PIE&event_name=button+pressed
    
    Google Charts API:
    https://developers.google.com/chart/interactive/docs/reference  
-->

<apex:page showHeader="false" controller="GraphRequestHandler">
<head>
  <apex:includeScript value="{!$Resource.jQuery}"/>
  <apex:includeScript value="{!$Resource.json2}"/>
  <apex:includeScript value="{!$Resource.jBBQ}"/>

  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <script type='text/javascript' src='https://www.google.com/jsapi' />
  <script src="/soap/ajax/19.0/connection.js" type="text/javascript" />
  <script type="text/javascript">
    
    // Allow other JavaScript libraries alongside jQuery
    $j = jQuery.noConflict();
      
    /**
     * Use html parameters to create a graphRequest object for GraphRequestHandler.handleRequest  
     *
     */
    function graphRequest(attrib_name, graph_type, event_name, id) {  
        this.firstAttrib = attrib_name;
      	this.graphType = graph_type;
      	this.firstAttribEvent = event_name;
        this.appName = id;
    }
    
    /**
     * Unescape HTML characters
     * 
     * HTML decoder taken from:
     * http://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript
     */  
    function htmlDecode(input){
      var e = document.createElement('div');
      e.innerHTML = input;
      return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
    }   

    // Load the Visualization API and the basic chart package 
    google.load("visualization", "1", {packages:["corechart"]});
    // Set a callback to run when the Google Visualization API is loaded
    google.setOnLoadCallback(drawChart);
    
    
    var params = $j.deparam.querystring();  			  // Grab parameters off the passed URL  
    var paramAsString = JSON.stringify(params, null, 1 ); // Turn parameters to String format
    var parAsObj = JSON.parse(paramAsString); 			  // Convert JSON to  javascript object
    var actualRequest = new graphRequest(parAsObj.attrib_name, 
      									 parAsObj.graph_type, 
      									 parAsObj.event_name, 
      									 parAsObj.Name);

    /**
     * Callback function that creates and populates a data table, instantiates the chart,
     * passes in the data and draws it.
     *
     */
    function drawChart() {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.GraphRequestHandler.handleRequest}', 
             actualRequest,
             function(result, event){
      			var output;
                if (event.status) {
                    output = result;
                } 
                else {
                    output = 'GraphRequestHandler.handleRequest error';
                }
                
      			// Clean html to give to google charts.
      			var tableString = htmlDecode(output);
                var table = JSON.parse(tableString);
      
      			// Create datatable
                var gChartsData = new google.visualization.DataTable(table);
            
      			// Instantiate and draw chart
      			var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
                chart.draw(gChartsData, {title:"Database Calls",
                            			 width:600, height:400,
                            			 legend: {position: 'top'}});
             }, 
             {escape: true}
        ); 
    };
  </script>
  </head>
    <div align="left">
    	<div id="chart_div"></div>
    </div>
</apex:page>